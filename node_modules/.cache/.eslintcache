[{"/home/coder/Documents/login/minted-1.1.0-frontend/src/index.js":"1","/home/coder/Documents/login/minted-1.1.0-frontend/src/App.js":"2","/home/coder/Documents/login/minted-1.1.0-frontend/src/Pages/Main.jsx":"3","/home/coder/Documents/login/minted-1.1.0-frontend/src/Pages/Profile.jsx":"4","/home/coder/Documents/login/minted-1.1.0-frontend/src/Pages/NFT.jsx":"5","/home/coder/Documents/login/minted-1.1.0-frontend/src/Components/common/Header.jsx":"6","/home/coder/Documents/login/minted-1.1.0-frontend/src/Components/main/Creators.jsx":"7","/home/coder/Documents/login/minted-1.1.0-frontend/src/Components/main/NFT.jsx":"8","/home/coder/Documents/login/minted-1.1.0-frontend/src/Components/main/Banner.jsx":"9","/home/coder/Documents/login/minted-1.1.0-frontend/src/Components/main/Featured.jsx":"10","/home/coder/Documents/login/minted-1.1.0-frontend/src/Components/profilePage/Userinfo.jsx":"11","/home/coder/Documents/login/minted-1.1.0-frontend/src/Components/common/searchbar.jsx":"12","/home/coder/Documents/login/minted-1.1.0-frontend/src/Components/profilePage/NFTGallery.jsx":"13"},{"size":229,"mtime":1632196853882,"results":"14","hashOfConfig":"15"},{"size":843,"mtime":1632196853878,"results":"16","hashOfConfig":"15"},{"size":541,"mtime":1632549242018,"results":"17","hashOfConfig":"15"},{"size":286,"mtime":1632196853878,"results":"18","hashOfConfig":"15"},{"size":4570,"mtime":1632196853878,"results":"19","hashOfConfig":"15"},{"size":4582,"mtime":1632549053046,"results":"20","hashOfConfig":"15"},{"size":1146,"mtime":1632550885581,"results":"21","hashOfConfig":"15"},{"size":2225,"mtime":1632196853878,"results":"22","hashOfConfig":"15"},{"size":225,"mtime":1632196853878,"results":"23","hashOfConfig":"15"},{"size":1416,"mtime":1632196853878,"results":"24","hashOfConfig":"15"},{"size":1948,"mtime":1632196853878,"results":"25","hashOfConfig":"15"},{"size":2561,"mtime":1632196853878,"results":"26","hashOfConfig":"15"},{"size":344,"mtime":1632196853878,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1nt8xoo",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"30"},"/home/coder/Documents/login/minted-1.1.0-frontend/src/index.js",[],["61","62"],"/home/coder/Documents/login/minted-1.1.0-frontend/src/App.js",[],"/home/coder/Documents/login/minted-1.1.0-frontend/src/Pages/Main.jsx",["63"],"/home/coder/Documents/login/minted-1.1.0-frontend/src/Pages/Profile.jsx",[],"/home/coder/Documents/login/minted-1.1.0-frontend/src/Pages/NFT.jsx",["64","65","66","67"],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\"\nimport { useParams } from \"react-router-dom\"\n\n\nconst Nft = () => {\n    const {postHashHex} = useParams()\n    const [data, setData] = useState({NFTDataBids : []})\n    const [isLoading, setIsLoading] = useState(true)\n\n    const getData = async(postHashHex) => {\n        let response = await axios.get(`http://localhost:5001/nft/${postHashHex}`)\n            .then((response)=> {\n                console.log(response);\n                setData(response.data)\n                setIsLoading(false)\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }\n\n    useEffect(() => {\n        getData(postHashHex)\n    }, [])\n\n\n    return (\n    <main className=\"container\">\n        <div className=\"nft-grid-container\">\n            <img src={data.imageURLs } alt=\"NFT\" className=\"nft-grid-item NFT-image\" />\n\n            <div className=\"grid-item NFT-details\">\n\n                {/* Creator Details */}\n                <h4 className=\"creator\">Creator</h4>\n                <a href={data.minted_profileLink} className=\"creator-card\">\n                    <img \n                    src={`https://bitclout.com/api/v0/get-single-profile-picture/${data.user_pubKey}?fallback=https://bitclout.com/assets/img/default_profile_pic.png`} alt=\"\" className=\"creator-dp\" />\n                    <p className=\"creator-name\">{data.username}</p>\n                </a>\n                <div className=\"present-price\">From {() => {\n                    if (data.NFTDataBids) {\n                        return <b>{data.NFTDataBids[0].BidAmount$Clout}</b>\n                    }\n                    return <b>Fetching</b>\n                    \n                    }} CLOUT</div>\n                <div className=\"likes-diamonds-reclouts\">\n                    üëç {data.likes}\n                    üíé {data.Diamonds}\n                    üîÅ {data.reclouts}\n                </div>\n\n                <i class=\"fas fa-retweet\"></i>\n\n                <div id=\"details-offers\">\n                        <ul className=\"nav nav-pills mb-3\" id=\"pills-tab\" role=\"tablist\">\n                            <li className=\"nav-item\">\n                                <a className=\"nav-link active\" id=\"details-tab\" data-toggle=\"pill\" href=\"#details\" role=\"tab\"\n                                    aria-controls=\"details\" aria-selected=\"true\">Details</a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <a className=\"nav-link\" id=\"bidders-tab\" data-toggle=\"pill\" href=\"#bidders\" role=\"tab\" aria-controls=\"bidders\"\n                                    aria-selected=\"false\">Bidders</a>\n                            </li>\n                        </ul>\n                        \n                        <div className=\"tab-content\" id=\"pills-tabContent\">\n                        \n                            <div className=\"tab-pane fade show active\" id=\"details\" role=\"tabpanel\" aria-labelledby=\"details-tab\">\n                                <div class=\"details\">{data.body}</div>\n                        \n                            </div>\n                        \n                            <div className=\"tab-pane fade\" id=\"bidders\" role=\"tabpanel\" aria-labelledby=\"bidders-tab\">\n        \n                                <table>\n\n                                    \n                                    <tr>\n                                        <th>Bidder</th>\n                                        <th>Bid Price</th>\n                                    </tr>\n                                    {data.NFTDataBids.map(singleBid => {\n                                    \n                                        return (\n                                        <tr>\n                                            <td> {singleBid.BiderName}</td>\n                                            <td>{singleBid.BidAmount$Clout}</td>\n                                        </tr>\n                                        );\n                                    })}\n                                    \n                        \n                                    \n                                </table>\n                        \n                            </div>\n                        \n                        </div>\n\n                    </div>\n                      \n                    \n                   <a id=\"bitclout-redirection\" href={data.BitcloutLink} target='_blank'>Buy</a>\n            </div>\n        </div>\n    </main>\n    );\n}\n\nexport default Nft","/home/coder/Documents/login/minted-1.1.0-frontend/src/Components/common/Header.jsx",["68","69","70","71","72","73"],"/home/coder/Documents/login/minted-1.1.0-frontend/src/Components/main/Creators.jsx",["74"],"/home/coder/Documents/login/minted-1.1.0-frontend/src/Components/main/NFT.jsx",["75","76"],"import React from \"react\";\n\nimport { useEffect,useState} from \"react\";\nimport axios from 'axios';\n\n\nconst NFT = () => {\n    const [pro,setPro] =useState([])\n\n    const sortArray = type => {\n        const types = {\n            HighestBidAmount: 'HighestBidAmount',\n            likes: 'likes',\n            DiamondCount: 'DiamondCount',\n            time: 'timeStamp'\n\n        }\n\n        const sortProperty = types[type]\n\n       \n        const sorted = [...pro].sort((a,b) => {\n            // console.log(b[sortProperty] - a[sortProperty])\n            return (b[sortProperty] - a[sortProperty])\n        })\n        setPro(sorted)\n      \n        \n        \n    }\n\n    useEffect(async ()=>{\n        axios.get('http://localhost:5001/showcase')\n            .then( res =>{\n                console.log(res);\n                setPro(res.data);\n            })\n            .catch( err =>{\n                console.log(err);\n            })\n    }, [])\n\n    return (\n        <div className='nft-feed'>\n            <h3 className='sub-heading'>Show Case</h3>\n\n            <select onChange={(e) => sortArray(e.target.value)}>\n                <option value=\"HighestBidAmount\" >Highest Bid</option>\n                <option value=\"likes\" defaultValue>Most Liked</option>\n                <option value=\"DiamondCount\">Most Diamonded</option>\n                <option value=\"biddersCount\">No. of Bidders</option>\n                {/* <option value=\"Lowest Priced\">Lowest Priced</option> */}\n                <option value=\"time\">Recent</option>\n            </select>\n            <div id='NFTGridContainer' className='grid-container'>\n                {pro.map(e => <a href={e.NFTPageLink} target='_blank' className='grid-item feed-card unclickable'>\n                    <img src={e.imageURLs} alt='Nothing here' />\n\n                    {/* A div with card details to hold the details in the card */}\n                    <div className='card-details'>\n                        <span className='tag likes'>üëç {e.likes}</span>\n\n                        <span className='tag price'>{e.HighestBidAmount.toFixed(3)}  CLOUT</span>  {/* Not working */}\n                    </div>\n                </a>)}\n\n            </div>\n        </div>\n    );\n}\n\nexport default NFT","/home/coder/Documents/login/minted-1.1.0-frontend/src/Components/main/Banner.jsx",[],"/home/coder/Documents/login/minted-1.1.0-frontend/src/Components/main/Featured.jsx",["77","78","79"],"import React, {useState, useEffect} from 'react'\nimport axios from \"axios\";\n\n\n\nconst Featured = () => {\n    const [data, setData] = useState([])\n    \n    const getData = async() => {\n        let response = await axios.get('http://localhost:5001/featured')\n        .then(res => {\n            \n            console.log(res.data);\n            setData(res.data)\n            \n        })    \n        .catch(err => console.log(err));\n    }\n\n    useEffect(() => {\n\n        getData()\n\n    }, [])\n\n    return (\n        <div className='featured-nfts'>\n            <h3 className='sub-heading'>Featured</h3>\n            <div id='FeaturedGridContainer' className='grid-container'>\n                {data.map( e => {\n                    const {ImageURL, LikeCount, HighestBidNanos} = e\n                    return <a href={e.NFTPageLink} target='_blank' className='grid-item featured-card'>\n                        \n                        <img src={ImageURL} alt='NFT Image' />\n\n                        {/* A div with Card Details class to hold the details in the card */}\n                        <div className='card-details'>\n                            <div className='tag likes'>üëç {LikeCount}</div>\n                            <div className='tag price'>{HighestBidNanos} CLOUT</div>\n                        </div>\n                    </a>\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default Featured","/home/coder/Documents/login/minted-1.1.0-frontend/src/Components/profilePage/Userinfo.jsx",["80","81","82","83","84"],"import React, {useEffect, useState} from 'react'\nimport getNFTs from \"./NFTGallery\";\nimport axios from \"axios\";\n\n\nconst Userinfo = (props) => {\n    const {username} = props\n    const [info, setInfo] = useState({})\n    const [NFT, setNFT] = useState([])\n    let sorting='nothing'\n    let publicKey=''\n\n\n        \n\n\n\n    const getData = async(username) => {\n        let response = await axios.get(`http://localhost:5001/u/${username}`)\n        .then(res => {\n            console.log('testing');\n            console.log(res.data);\n            setInfo(res.data)\n            publicKey = res.data.public_key\n            console.log(publicKey);\n        }).then(async(res) => {\n            let nfts = await getNFTs(publicKey);\n            console.log(nfts);\n            setNFT(nfts)\n            \n        }\n            \n        )\n        .catch(err => console.log(err))\n    }\n    \n\n    useEffect(() => {\n        getData(username)\n    }, [])\n\n\n    return (\n        <div className='user-details'>\n            {/* User-Card Component */}\n            <div className='card-user'>\n                <img src={info.profile_image} className='creator-dp' alt='image' />\n                {/* A div with card details class to hold the details in the card */}\n                <div id='username'className='card-details card-details-user'>{info.username}</div>\n                \n            </div>\n\n            <div className='description'>\n                <h3 className='bio-heading'>Bio</h3>\n                <div className='bio-description'>{info.description}</div>\n                <a className='bitclout-redirection' href={info.bitclout_link} target='_blank'>View Profile</a> \n                \n            </div>\n\n            <div>\n                \n\n                {NFT.map(single => {\n                    return <img class= 'width-test' src={single.ImageURL} alt={single.LikeCount} />\n                })}\n            </div>\n        </div>\n    )\n}\nexport default Userinfo\n","/home/coder/Documents/login/minted-1.1.0-frontend/src/Components/common/searchbar.jsx",["85","86"],"import React from 'react'\nimport { useState } from 'react'\nimport axios from 'axios'\nimport { List, ListItem, ListItemText} from '@material-ui/core'\n\n\nclass SearchBar extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            searchKey:'',\n            searchResults:[]\n           \n           \n        }\n    }\n    handleChange=async(event)=>{\n\n        this.setState({\n            searchKey:event.target.value\n        })\n       \n        let response = await axios.get(`http://localhost:5001/search/${this.state.searchKey}`)\n        .then(res => {\n            this.setState({\n                searchResults:res.data\n            })\n         console.log(res.data);\n\n                              \n        })    \n          .catch(err => console.log(err));\n        if (this.state.searchKey===''){\n            this.setState({\n                searchResults:[]\n            })\n        }\n\n    \n         \n    }\n\n\n    render(){\n    return (<>\n     <div className='search'>\n                    <form action='#'>\n                        <div className='search-bar'>\n                            <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='currentColor' className='bi bi-search' viewBox='0 0 16 16'>\n                                <path\n                                    d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\" />\n                            </svg>\n                            < input \n                                type='text' \n                                placeholder='Search' \n                                name='search'\n                                value={this.state.searchKey}\n                                onChange={this.handleChange} \n                            />\n                          \n                            {(this.state.searchResults).map((result, index) => (                            \n                              <List >\n                                <ListItem button>\n                                <a href={result.profilePage}>\n                                <ListItemText primary={result.username} />\n                                </a>\n                                </ListItem>\n                              </List>\n                              ))}\n                            \n                        </div>\n                    </form>\n                </div>\n      </>)\n    }\n}\nexport default SearchBar","/home/coder/Documents/login/minted-1.1.0-frontend/src/Components/profilePage/NFTGallery.jsx",["87"],"import React from 'react'\nimport axios from 'axios'\n\n\n\nconst getNFTs = async(pub) => {\n    let response = await axios.get(`http://localhost:5001/unfts/${pub}`)\n    .then(res => {\n        console.log('testig NFTs')\n        console.log(res);\n        return res.data\n    })\n    console.log(response);\n    return response\n}\n\n\nexport default getNFTs",{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":6,"column":8,"nodeType":"94","messageId":"95","endLine":6,"endColumn":11},{"ruleId":"92","severity":1,"message":"96","line":9,"column":12,"nodeType":"94","messageId":"95","endLine":9,"endColumn":21},{"ruleId":"92","severity":1,"message":"97","line":12,"column":13,"nodeType":"94","messageId":"95","endLine":12,"endColumn":21},{"ruleId":"98","severity":1,"message":"99","line":25,"column":8,"nodeType":"100","endLine":25,"endColumn":10,"suggestions":"101"},{"ruleId":"102","severity":1,"message":"103","line":106,"column":20,"nodeType":"104","messageId":"105","endLine":106,"endColumn":90,"fix":"106"},{"ruleId":"92","severity":1,"message":"107","line":12,"column":6,"nodeType":"94","messageId":"95","endLine":12,"endColumn":17},{"ruleId":"92","severity":1,"message":"108","line":15,"column":6,"nodeType":"94","messageId":"95","endLine":15,"endColumn":10},{"ruleId":"109","severity":1,"message":"110","line":37,"column":23,"nodeType":"111","messageId":"112","endLine":37,"endColumn":25},{"ruleId":"109","severity":1,"message":"110","line":83,"column":15,"nodeType":"111","messageId":"112","endLine":83,"endColumn":17},{"ruleId":"113","severity":1,"message":"114","line":124,"column":26,"nodeType":"104","endLine":124,"endColumn":76},{"ruleId":"115","severity":1,"message":"116","line":124,"column":76,"nodeType":"104","endLine":124,"endColumn":124},{"ruleId":"98","severity":1,"message":"117","line":25,"column":8,"nodeType":"100","endLine":25,"endColumn":10,"suggestions":"118"},{"ruleId":"98","severity":1,"message":"119","line":32,"column":15,"nodeType":"120","endLine":41,"endColumn":6},{"ruleId":"102","severity":1,"message":"103","line":56,"column":31,"nodeType":"104","messageId":"105","endLine":56,"endColumn":115,"fix":"121"},{"ruleId":"92","severity":1,"message":"97","line":10,"column":13,"nodeType":"94","messageId":"95","endLine":10,"endColumn":21},{"ruleId":"102","severity":1,"message":"103","line":32,"column":28,"nodeType":"104","messageId":"105","endLine":32,"endColumn":104,"fix":"122"},{"ruleId":"123","severity":1,"message":"124","line":34,"column":25,"nodeType":"104","endLine":34,"endColumn":63},{"ruleId":"92","severity":1,"message":"125","line":10,"column":9,"nodeType":"94","messageId":"95","endLine":10,"endColumn":16},{"ruleId":"92","severity":1,"message":"97","line":19,"column":13,"nodeType":"94","messageId":"95","endLine":19,"endColumn":21},{"ruleId":"98","severity":1,"message":"126","line":40,"column":8,"nodeType":"100","endLine":40,"endColumn":10,"suggestions":"127"},{"ruleId":"123","severity":1,"message":"124","line":47,"column":17,"nodeType":"104","endLine":47,"endColumn":84},{"ruleId":"102","severity":1,"message":"103","line":56,"column":17,"nodeType":"104","messageId":"105","endLine":56,"endColumn":95,"fix":"128"},{"ruleId":"92","severity":1,"message":"129","line":2,"column":10,"nodeType":"94","messageId":"95","endLine":2,"endColumn":18},{"ruleId":"92","severity":1,"message":"97","line":24,"column":13,"nodeType":"94","messageId":"95","endLine":24,"endColumn":21},{"ruleId":"92","severity":1,"message":"130","line":1,"column":8,"nodeType":"94","messageId":"95","endLine":1,"endColumn":13},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'NFT' is defined but never used.","Identifier","unusedVar","'isLoading' is assigned a value but never used.","'response' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'postHashHex'. Either include it or remove the dependency array.","ArrayExpression",["133"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"134","text":"135"},"'userPayload' is assigned a value but never used.","'data' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["136"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression",{"range":"137","text":"135"},{"range":"138","text":"135"},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don‚Äôt need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'sorting' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getData' and 'username'. Either include them or remove the dependency array.",["139"],{"range":"140","text":"135"},"'useState' is defined but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},[4481,4481]," rel=\"noreferrer\"",{"desc":"143","fix":"144"},[1715,1715],[871,871],{"desc":"145","fix":"146"},[1633,1633],"Update the dependencies array to be: [postHashHex]",{"range":"147","text":"148"},"Update the dependencies array to be: [getData]",{"range":"149","text":"150"},"Update the dependencies array to be: [getData, username]",{"range":"151","text":"152"},[718,720],"[postHashHex]",[513,515],"[getData]",[927,929],"[getData, username]"]